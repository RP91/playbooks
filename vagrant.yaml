---
- hosts: "{{ hostname }}"
  become: yes
  become_method: sudo
  remote_user: "{{ username }}" 
  gather_facts: yes
  vars_prompt:
    - name: hostname
      prompt: "host: "
      default: vagrant
      private: no
    - name: username
      prompt: "username: "
      default: vagrant
      private: no
  tasks:
    - name: update apt
      apt:
        update_cache: yes
    - name: upgrade installed packages
      apt:
        upgrade: yes
    - name: ensure apache is not installed
      apt:
        name: apache2
        state: absent
    - name: install necessary packages
      apt:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - curl
        - wget
        - python3
        - python
        - vim
        - nginx
        - nodejs
        - npm
        - mysql-server
        - php
        - git
        - ntp
        - zsh
        - ufw
      notify: 
        - restart mysql-server
        - restart ntp
    - name: enable nginx
      service:
        name: nginx
        state: started
        enabled: yes
    - name: copy vim configuration file
      copy:
        src: /home/rafal/.vimrc
        dest: /home/vagrant/
        owner: vagrant
        group: vagrant
        mode: 0644
    - name: add proper bash prompt
      lineinfile:
        path: /home/vagrant/.bashrc
        line: 'export PS1="\[\033[38;5;214m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\[$(tput sgr0)\]\[\033[38;5;45m\]\H\[$(tput sgr0)\]\[\033[38;5;15m\]:[\w]\\$: \[$(tput sgr0)\]"'

    - name: enabling firewall
      ufw:
        state: enabled
        policy: deny
        rule: allow
        port: http
        proto: tcp
        ignore_errors: yes
      tags:
        - firewall

    - name: creates test group
      group:
        name: testers
        state: present

    - name: create some local users
      user:
        name: test1
        comment: this user was made by Ansible
        shell: /bin/zsh
        groups: testers
    - name: get text file from remote machine
      fetch:
        src: /vagrant/listofcommands.txt
        dest: /tmp
      ignore_errors: yes

  handlers:
    - name: restart mysql-server
      service:
        name: mysql
        state: restarted
    - name: restart ntp
      service:
        name: ntp
        state: restarted
